
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1C4033EFE065342D8D54D032BE502CAB'
    
_lr_action_items = {'AT':([59,65,69,73,87,126,139,148,163,],[85,85,85,85,85,85,85,-62,-63,]),'UNOT':([103,114,135,136,154,155,],[135,135,135,135,135,135,]),'NULL':([0,1,3,4,6,8,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,29,33,37,40,41,43,45,46,47,49,50,51,52,53,55,58,63,64,66,68,70,77,80,83,86,89,90,91,92,93,94,95,99,100,101,104,105,106,108,110,111,121,125,128,129,131,132,133,134,137,138,144,147,152,156,159,165,166,167,168,169,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,23,-8,-11,-5,23,-72,-85,-29,-30,-80,-71,-90,-82,-24,-2,23,-42,-86,-27,-87,-84,23,-83,-88,-25,-28,-89,-26,-10,-7,-98,23,-78,-23,-66,-81,-65,-52,-47,-48,-53,-60,-40,23,-44,-91,-99,-97,-41,-36,-38,-46,-64,-37,-39,-58,-49,23,23,-111,-96,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,23,-109,-2,-14,-13,23,23,-20,-16,-19,-17,-18,-12,-15,-35,]),'STRING':([0,1,3,4,6,8,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,27,29,33,37,40,41,43,45,46,47,49,50,51,52,53,55,58,60,61,63,64,66,68,70,77,80,83,85,86,89,90,91,92,93,94,95,96,97,99,100,101,104,105,106,108,110,111,121,125,128,129,130,131,132,133,134,137,138,144,147,150,152,156,159,165,166,167,168,169,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,21,-8,-11,-5,21,-72,-85,-29,-30,-80,-71,-90,-82,-24,-2,-2,21,-42,-86,-27,77,-84,21,-83,-88,-25,-28,-89,-26,-10,-7,-94,21,-98,21,-78,-23,-66,-81,-65,-52,124,-47,-48,-53,-60,-40,21,-44,-91,77,-93,-99,-97,-41,-36,-38,-46,-64,-37,-39,-58,-49,21,21,-92,-111,-96,-77,-107,-110,-108,-102,-43,-95,-105,-45,-34,-106,-103,-104,-31,21,-109,-2,-14,-13,21,21,-20,-16,-19,-17,-18,-12,-15,-35,]),'RULE':([0,1,3,4,6,8,9,10,11,13,14,16,18,19,20,21,22,23,25,26,33,37,40,41,43,45,47,49,50,51,52,53,55,58,66,68,77,80,83,86,89,90,91,92,94,95,99,101,104,105,106,108,110,111,121,125,131,133,134,137,138,144,147,152,156,159,165,166,167,168,172,186,],[-2,-4,-6,-2,-3,-79,-9,48,-8,-11,-5,-72,-85,-29,-30,-80,-71,-90,-82,-24,48,-42,-86,-27,-87,-84,-83,-88,-25,-28,-89,-26,-10,-7,-78,-23,-81,-65,-52,-47,-48,-53,-60,-40,-44,-91,-99,-41,-36,-38,-46,-64,-37,-39,-58,-49,-111,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,-109,-12,]),'OR':([8,134,137,138,144,152,153,165,166,167,172,],[-79,-107,155,-108,155,-105,155,-106,-103,-104,-109,]),'VOIDPORT':([0,1,3,4,6,8,9,10,11,13,14,16,18,19,20,21,22,23,25,26,33,37,40,41,43,45,47,49,50,51,52,53,55,58,66,68,69,73,77,80,83,86,89,90,91,92,94,95,99,101,104,105,106,108,110,111,121,125,131,133,134,137,138,144,147,152,156,159,165,166,167,168,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,37,-8,-11,-5,-72,-85,-29,-30,-80,-71,-90,-82,-24,37,-42,-86,-27,-87,-84,-83,-88,-25,-28,-89,-26,-10,-7,-78,-23,37,37,-81,-65,-52,-47,-48,-53,-60,-40,-44,-91,-99,-41,-36,-38,-46,-64,-37,-39,-58,-49,-111,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,-109,-2,-14,-13,37,37,-20,-16,-19,-17,-18,-12,-15,-35,]),'LBRACE':([0,1,3,4,6,8,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,29,33,37,40,41,43,45,46,47,49,50,51,52,53,55,58,63,64,66,68,70,77,80,83,86,89,90,91,92,93,94,95,99,100,101,104,105,106,108,110,111,115,116,118,121,125,128,129,131,132,133,134,137,138,144,147,152,156,159,162,165,166,167,168,169,171,172,174,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,27,-8,-11,-5,27,-72,-85,-29,-30,-80,-71,-90,-82,-24,-2,27,-42,-86,-27,-87,-84,27,-83,-88,-25,-28,-89,-26,-10,-7,-98,27,-78,-23,-66,-81,-65,-52,-47,-48,-53,-60,-40,27,-44,-91,-99,-97,-41,-36,-38,-46,-64,-37,-39,-76,-74,-73,-58,-49,27,27,-111,-96,-77,-107,-110,-108,-102,-43,-105,-45,-34,-75,-106,-103,-104,-31,27,-2,-109,175,-2,-14,-13,27,27,-20,-16,-19,-17,-18,-12,-15,-35,]),'COMPONENT':([0,1,3,4,6,8,11,13,14,16,18,21,22,23,25,40,43,45,47,49,52,55,58,77,95,99,186,],[-2,-4,-6,12,-3,-79,12,-11,-5,-72,-85,-80,-71,-90,-82,-86,-87,-84,-83,-88,-89,-10,-7,-81,-91,-99,-12,]),'$end':([0,1,3,4,5,6,8,9,10,11,13,14,16,18,19,20,21,22,23,24,25,26,33,37,39,40,41,43,45,47,49,50,51,52,53,55,58,66,68,77,80,83,86,89,90,91,92,94,95,99,101,104,105,106,108,110,111,121,125,131,133,134,137,138,144,147,152,156,159,165,166,167,168,172,186,],[-2,-4,-6,-2,0,-3,-79,-9,-2,-8,-11,-5,-72,-85,-29,-30,-80,-71,-90,-1,-82,-24,-21,-42,-22,-86,-27,-87,-84,-83,-88,-25,-28,-89,-26,-10,-7,-78,-23,-81,-65,-52,-47,-48,-53,-60,-40,-44,-91,-99,-41,-36,-38,-46,-64,-37,-39,-58,-49,-111,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,-109,-12,]),'GROUP':([0,1,3,4,6,8,9,10,11,13,14,16,18,19,20,21,22,23,25,26,33,37,40,41,43,45,47,49,50,51,52,53,55,58,66,68,77,80,83,86,89,90,91,92,94,95,99,101,104,105,106,108,110,111,121,125,131,133,134,137,138,144,147,152,156,159,165,166,167,168,172,186,],[-2,-4,-6,-2,-3,-79,-9,28,-8,-11,-5,-72,-85,-29,-30,-80,-71,-90,-82,-24,28,-42,-86,-27,-87,-84,-83,-88,-25,-28,-89,-26,-10,-7,-78,-23,-81,-65,-52,-47,-48,-53,-60,-40,-44,-91,-99,-41,-36,-38,-46,-64,-37,-39,-58,-49,-111,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,-109,-12,]),'LBRACK':([0,1,3,4,6,8,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,29,33,37,40,41,42,43,45,46,47,49,50,51,52,53,55,58,63,64,66,68,70,77,80,83,86,89,90,91,92,93,94,95,99,100,101,104,105,106,108,110,111,121,125,128,129,131,132,133,134,137,138,144,147,152,156,159,165,166,167,168,169,172,175,176,177,178,179,180,181,182,183,184,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,29,-8,-11,-5,29,-72,-85,-29,-30,-80,-71,-90,-82,-24,-2,29,-42,-86,-27,75,-87,-84,29,-83,-88,-25,-28,-89,-26,-10,-7,-98,29,-78,-23,-66,-81,-65,-52,-47,-48,-53,-60,-40,29,-44,-91,-99,-97,-41,-36,-38,-46,-64,-37,-39,-58,-49,29,29,-111,-96,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,29,-109,-2,-14,-13,29,29,-20,-16,-19,-17,75,-18,-12,-15,-35,]),'RBRACE':([18,21,23,25,27,37,40,43,45,47,49,52,60,61,77,80,83,86,89,90,91,92,94,95,97,99,101,104,105,106,108,110,111,121,125,130,147,150,156,159,168,179,180,181,182,183,185,187,191,],[-85,-80,-90,-82,-2,-42,-86,-87,-84,-83,-88,-89,-94,95,-81,-65,-52,-47,-48,-53,-60,-40,-44,-91,-93,-99,-41,-36,-38,-46,-64,-37,-39,-58,-49,-92,-43,-95,-45,-34,-31,186,-20,-16,-19,-17,-18,-15,-35,]),'APPLY':([0,1,3,4,6,8,9,10,11,13,14,16,18,19,20,21,22,23,25,26,33,37,40,41,43,45,47,49,50,51,52,53,55,58,66,68,77,80,83,86,89,90,91,92,94,95,99,101,104,105,106,108,110,111,121,125,131,133,134,137,138,144,147,152,156,159,165,166,167,168,172,186,],[-2,-4,-6,-2,-3,-79,-9,32,-8,-11,-5,-72,-85,-29,-30,-80,-71,-90,-82,-24,32,-42,-86,-27,-87,-84,-83,-88,-25,-28,-89,-26,-10,-7,-78,-23,-81,-65,-52,-47,-48,-53,-60,-40,-44,-91,-99,-41,-36,-38,-46,-64,-37,-39,-58,-49,-111,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,-109,-12,]),'COMMA':([8,16,18,21,22,23,25,40,43,45,47,49,52,66,67,77,80,83,86,89,90,91,92,94,95,97,99,100,101,106,107,108,111,115,118,121,125,131,133,147,150,156,160,162,173,],[-79,-72,-85,-80,-71,-90,-82,-86,-87,-84,-83,-88,-89,-78,102,-81,-65,-52,-47,-48,-53,-60,126,-44,-91,130,-99,132,126,-52,139,-64,126,-76,146,-58,-49,102,-77,-43,-95,-52,170,-75,-70,]),'EQ':([7,8,158,],[15,-79,169,]),'GT':([8,16,17,18,21,22,23,25,30,31,34,36,37,38,40,42,43,44,45,47,49,52,77,78,80,95,99,108,184,],[-79,-72,59,-85,-80,-71,-90,-82,65,-61,69,-79,-42,73,-86,-59,-87,-50,-84,-83,-88,-89,-81,-51,-65,-91,-99,-64,-61,]),'COLON':([0,1,3,4,6,8,9,10,11,13,14,16,18,19,20,21,22,23,25,26,33,36,37,40,41,43,45,47,49,50,51,52,53,55,58,62,66,67,68,77,79,80,83,86,89,90,91,92,93,94,95,96,99,101,104,105,106,108,110,111,121,125,131,133,134,137,138,144,147,152,156,159,165,166,167,168,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,35,-8,-11,-5,-72,-85,-29,-30,-80,-71,-90,-82,-24,35,72,-42,-86,-27,-87,-84,-83,-88,-25,-28,-89,-26,-10,-7,98,-78,103,-23,-81,114,-65,-52,-47,-48,-53,-60,-40,35,-44,-91,129,-99,-41,-36,-38,-46,-64,-37,-39,-58,-49,-111,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,-109,-2,-14,-13,35,35,-20,-16,-19,-17,-18,-12,-15,-35,]),'IDENTIFIER':([0,1,2,3,4,6,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,25,26,28,32,33,35,37,40,41,43,45,46,47,48,49,50,51,52,53,54,55,58,59,65,66,68,69,70,71,72,73,75,77,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,98,99,101,102,103,104,105,106,108,110,111,113,114,121,122,123,124,125,126,128,131,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,151,152,154,155,156,157,159,160,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,185,186,187,189,190,191,],[-2,-4,8,-6,-2,-3,-79,-9,36,-8,56,-11,-5,8,-72,-85,-29,-30,-80,-71,-90,-82,-24,8,8,36,8,-42,-86,-27,-87,-84,8,-83,8,-88,-25,-28,-89,-26,80,-10,-7,-2,-2,-78,-23,-2,-66,108,56,-2,112,-81,-65,115,119,-52,120,-47,-2,-55,-48,-53,-60,-40,8,-44,-91,8,-99,-41,8,8,-36,-38,-46,-64,-37,-39,-2,8,-58,-56,-54,-57,-49,-2,8,-111,-77,-107,8,8,-110,-108,-2,-2,-69,8,-102,115,162,-43,-62,-2,-105,8,8,-45,8,-34,-68,-63,8,-106,-103,-104,-31,8,-67,115,-109,-70,-2,-14,-13,36,36,-20,-16,-19,-17,-18,-12,-15,-2,8,-35,]),'RBRACK':([18,21,23,25,29,40,43,45,47,49,52,63,64,77,95,99,100,112,132,],[-85,-80,-90,-82,-2,-86,-87,-84,-83,-88,-89,-98,99,-81,-91,-99,-97,141,-96,]),'LPAREN':([8,42,56,57,74,76,80,103,108,109,114,119,134,135,136,141,154,155,184,188,],[-79,-2,-101,81,-33,113,-65,136,-64,140,136,-100,151,136,136,-32,136,136,-2,189,]),'DEFINE':([0,3,6,8,14,16,18,21,22,23,25,40,43,45,47,49,52,58,77,95,99,],[2,-6,2,-79,-5,-72,-85,-80,-71,-90,-82,-86,-87,-84,-83,-88,-89,-7,-81,-91,-99,]),'SLASH':([8,16,18,21,22,23,25,40,43,45,47,49,52,59,65,69,73,77,95,99,126,127,139,149,],[-79,-72,-85,-80,-71,-90,-82,-86,-87,-84,-83,-88,-89,93,93,93,93,-81,-91,-99,93,148,93,163,]),'RARROW':([115,116,118,145,161,162,],[-76,-74,-73,-2,171,-75,]),'TRUE':([0,1,3,4,6,8,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,29,33,37,40,41,43,45,46,47,49,50,51,52,53,55,58,63,64,66,68,70,77,80,83,86,89,90,91,92,93,94,95,99,100,101,104,105,106,108,110,111,121,125,128,129,131,132,133,134,137,138,144,147,152,156,159,165,166,167,168,169,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,49,-8,-11,-5,49,-72,-85,-29,-30,-80,-71,-90,-82,-24,-2,49,-42,-86,-27,-87,-84,49,-83,-88,-25,-28,-89,-26,-10,-7,-98,49,-78,-23,-66,-81,-65,-52,-47,-48,-53,-60,-40,49,-44,-91,-99,-97,-41,-36,-38,-46,-64,-37,-39,-58,-49,49,49,-111,-96,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,49,-109,-2,-14,-13,49,49,-20,-16,-19,-17,-18,-12,-15,-35,]),'RPAREN':([8,16,18,21,22,23,25,40,43,45,47,49,52,77,81,95,99,113,115,116,117,118,134,138,140,142,143,151,152,153,157,160,162,164,165,166,167,170,172,173,189,190,],[-79,-72,-85,-80,-71,-90,-82,-86,-87,-84,-83,-88,-89,-81,-2,-91,-99,-2,-76,-74,145,-73,-107,-108,-2,-69,159,-2,-105,165,168,-68,-75,172,-106,-103,-104,-67,-109,-70,-2,191,]),'DOCSTRING':([175,],[177,]),'FALSE':([0,1,3,4,6,8,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,29,33,37,40,41,43,45,46,47,49,50,51,52,53,55,58,63,64,66,68,70,77,80,83,86,89,90,91,92,93,94,95,99,100,101,104,105,106,108,110,111,121,125,128,129,131,132,133,134,137,138,144,147,152,156,159,165,166,167,168,169,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,52,-8,-11,-5,52,-72,-85,-29,-30,-80,-71,-90,-82,-24,-2,52,-42,-86,-27,-87,-84,52,-83,-88,-25,-28,-89,-26,-10,-7,-98,52,-78,-23,-66,-81,-65,-52,-47,-48,-53,-60,-40,52,-44,-91,-99,-97,-41,-36,-38,-46,-64,-37,-39,-58,-49,52,52,-111,-96,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,52,-109,-2,-14,-13,52,52,-20,-16,-19,-17,-18,-12,-15,-35,]),'NUMBER':([0,1,3,4,6,8,9,10,11,13,14,15,16,18,19,20,21,22,23,25,26,29,33,37,40,41,43,45,46,47,49,50,51,52,53,55,58,63,64,66,68,70,77,80,83,85,86,89,90,91,92,93,94,95,99,100,101,104,105,106,108,110,111,121,125,128,129,131,132,133,134,137,138,144,147,152,156,159,165,166,167,168,169,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,40,-8,-11,-5,40,-72,-85,-29,-30,-80,-71,-90,-82,-24,-2,40,-42,-86,-27,-87,-84,40,-83,-88,-25,-28,-89,-26,-10,-7,-98,40,-78,-23,-66,-81,-65,-52,122,-47,-48,-53,-60,-40,40,-44,-91,-99,-97,-41,-36,-38,-46,-64,-37,-39,-58,-49,40,40,-111,-96,-77,-107,-110,-108,-102,-43,-105,-45,-34,-106,-103,-104,-31,40,-109,-2,-14,-13,40,40,-20,-16,-19,-17,-18,-12,-15,-35,]),'DOT':([0,1,3,4,6,8,9,10,11,13,14,16,18,19,20,21,22,23,25,26,33,36,37,40,41,43,45,47,49,50,51,52,53,55,56,57,58,59,65,66,68,69,73,77,80,83,86,87,89,90,91,92,94,95,99,101,104,105,106,108,109,110,111,119,120,121,125,126,131,133,134,137,138,139,144,147,148,152,156,159,163,165,166,167,168,172,175,176,177,178,179,180,181,182,183,185,186,187,191,],[-2,-4,-6,-2,-3,-79,-9,54,-8,-11,-5,-72,-85,-29,-30,-80,-71,-90,-82,-24,54,71,-42,-86,-27,-87,-84,-83,-88,-25,-28,-89,-26,-10,-101,82,-7,54,54,-78,-23,54,54,-81,-65,-52,-47,54,-48,-53,-60,-40,-44,-91,-99,-41,-36,-38,-46,-64,82,-37,-39,-100,71,-58,-49,54,-111,-77,-107,-110,-108,54,-102,-43,-62,-105,-45,-34,-63,-106,-103,-104,-31,-109,-2,-14,-13,54,54,-20,-16,-19,-17,-18,-12,-15,-35,]),'AND':([8,134,137,138,144,152,153,165,166,167,172,],[-79,-107,154,-108,154,-105,154,-106,-103,154,-109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'identifier':([2,10,15,28,32,33,35,46,48,93,98,102,103,114,128,135,136,143,154,155,157,164,169,178,179,190,],[7,16,16,62,66,16,70,16,79,16,66,133,134,134,16,134,134,158,134,134,158,158,16,16,16,158,]),'comp_statements':([178,],[179,]),'implicit_outport':([10,33,178,179,],[17,17,17,17,]),'null':([10,15,33,46,64,93,128,129,169,178,179,],[18,18,18,18,18,18,18,18,18,18,18,]),'comp_statement':([178,179,],[181,187,]),'void':([10,33,69,73,178,179,],[34,34,104,110,34,34,]),'docstring':([175,],[178,]),'compdefs':([4,],[11,]),'apply':([10,33,],[20,20,]),'real_or_internal_inport':([59,65,69,73,87,126,139,],[86,86,86,86,125,86,86,]),'value':([10,15,33,46,64,93,128,129,169,178,179,],[22,22,22,22,100,22,22,150,22,22,22,]),'compdef':([4,11,],[13,55,]),'opt_tag':([59,65,69,73,87,126,139,],[84,84,84,84,84,84,84,]),'tag_value':([85,],[123,]),'opt_program':([10,],[24,]),'dictionary':([10,15,33,46,64,93,128,129,169,178,179,],[25,25,25,25,25,25,25,25,25,25,25,]),'statement':([10,33,],[26,68,]),'internal_port_property':([178,179,],[182,182,]),'named_args':([113,140,151,189,],[143,157,164,190,]),'members':([27,],[61,]),'port_transform':([59,65,69,73,126,139,],[87,87,87,87,87,87,]),'transformed_inport':([59,65,69,73,126,139,],[89,89,89,89,89,89,]),'internal_outport':([10,33,178,179,],[30,30,30,30,]),'identifiers':([32,98,],[67,131,]),'inport':([59,65,69,73,126,139,],[94,94,94,94,147,147,]),'opt_direction':([42,184,],[76,188,]),'program':([10,],[33,]),'argnames':([81,145,171,],[118,118,118,]),'qualified_name':([12,72,],[57,109,]),'group':([10,33,],[19,19,]),'script':([0,],[5,]),'named_arg':([143,157,164,190,],[160,160,160,160,]),'member':([61,],[97,]),'link':([10,33,178,179,],[41,41,180,180,]),'real_inport_list':([69,],[105,]),'empty':([0,4,10,27,29,42,59,65,69,73,81,87,113,126,139,140,145,151,171,175,184,189,],[1,9,39,60,63,74,88,88,88,88,116,88,142,88,88,142,116,142,116,176,74,142,]),'real_outport':([10,33,178,179,],[38,38,38,38,]),'opt_compdefs':([4,],[10,]),'constdef':([0,6,],[3,14,]),'qualified_port':([10,33,84,178,179,],[42,42,121,42,42,]),'string':([10,15,33,46,61,64,93,128,129,169,178,179,],[43,43,43,43,96,43,43,43,43,43,43,43,]),'opt_constdefs':([0,],[4,]),'argument':([10,15,33,46,93,128,169,178,179,],[44,58,44,78,127,149,173,44,44,]),'bool':([10,15,33,46,64,93,128,129,169,178,179,],[45,45,45,45,45,45,45,45,45,45,45,]),'constdefs':([0,],[6,]),'label':([10,33,93,178,179,],[46,46,128,46,46,]),'array':([10,15,33,46,64,93,128,129,169,178,179,],[47,47,47,47,47,47,47,47,47,47,47,]),'values':([29,],[64,]),'assignment':([10,33,178,179,],[50,50,183,183,]),'define_rule':([10,33,],[51,51,]),'internal_inport':([59,65,69,73,87,126,139,],[90,90,90,90,90,90,90,]),'predicate':([103,114,135,136,154,155,],[138,138,138,138,138,138,]),'real_inport':([59,65,69,73,87,126,139,],[83,83,106,83,83,83,156,]),'unqualified_port':([10,33,59,65,69,73,87,126,139,178,179,],[31,31,91,91,91,91,91,91,91,184,184,]),'port_property':([10,33,178,179,],[53,53,185,185,]),'rule':([103,114,135,136,154,155,],[137,144,152,153,166,167,]),'inport_list':([59,65,69,73,],[92,101,107,111,]),'opt_argnames':([81,145,171,],[117,161,174,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> opt_constdefs opt_compdefs opt_program','script',3,'p_script','parser.py',60),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',66),
  ('opt_constdefs -> constdefs','opt_constdefs',1,'p_opt_constdefs','parser.py',70),
  ('opt_constdefs -> empty','opt_constdefs',1,'p_opt_constdefs','parser.py',71),
  ('constdefs -> constdefs constdef','constdefs',2,'p_constdefs','parser.py',76),
  ('constdefs -> constdef','constdefs',1,'p_constdefs','parser.py',77),
  ('constdef -> DEFINE identifier EQ argument','constdef',4,'p_constdef','parser.py',85),
  ('opt_compdefs -> compdefs','opt_compdefs',1,'p_opt_compdefs','parser.py',91),
  ('opt_compdefs -> empty','opt_compdefs',1,'p_opt_compdefs','parser.py',92),
  ('compdefs -> compdefs compdef','compdefs',2,'p_compdefs','parser.py',96),
  ('compdefs -> compdef','compdefs',1,'p_compdefs','parser.py',97),
  ('compdef -> COMPONENT qualified_name LPAREN opt_argnames RPAREN opt_argnames RARROW opt_argnames LBRACE docstring comp_statements RBRACE','compdef',12,'p_compdef','parser.py',105),
  ('docstring -> DOCSTRING','docstring',1,'p_docstring','parser.py',110),
  ('docstring -> empty','docstring',1,'p_docstring','parser.py',111),
  ('comp_statements -> comp_statements comp_statement','comp_statements',2,'p_comp_statements','parser.py',115),
  ('comp_statements -> comp_statement','comp_statements',1,'p_comp_statements','parser.py',116),
  ('comp_statement -> assignment','comp_statement',1,'p_comp_statement','parser.py',123),
  ('comp_statement -> port_property','comp_statement',1,'p_comp_statement','parser.py',124),
  ('comp_statement -> internal_port_property','comp_statement',1,'p_comp_statement','parser.py',125),
  ('comp_statement -> link','comp_statement',1,'p_comp_statement','parser.py',126),
  ('opt_program -> program','opt_program',1,'p_opt_program','parser.py',130),
  ('opt_program -> empty','opt_program',1,'p_opt_program','parser.py',131),
  ('program -> program statement','program',2,'p_program','parser.py',135),
  ('program -> statement','program',1,'p_program','parser.py',136),
  ('statement -> assignment','statement',1,'p_statement','parser.py',143),
  ('statement -> port_property','statement',1,'p_statement','parser.py',144),
  ('statement -> link','statement',1,'p_statement','parser.py',145),
  ('statement -> define_rule','statement',1,'p_statement','parser.py',146),
  ('statement -> group','statement',1,'p_statement','parser.py',147),
  ('statement -> apply','statement',1,'p_statement','parser.py',148),
  ('assignment -> IDENTIFIER COLON qualified_name LPAREN named_args RPAREN','assignment',6,'p_assignment','parser.py',153),
  ('opt_direction -> LBRACK IDENTIFIER RBRACK','opt_direction',3,'p_opt_direction','parser.py',158),
  ('opt_direction -> empty','opt_direction',1,'p_opt_direction','parser.py',159),
  ('port_property -> qualified_port opt_direction LPAREN named_args RPAREN','port_property',5,'p_port_property','parser.py',173),
  ('internal_port_property -> unqualified_port opt_direction LPAREN named_args RPAREN','internal_port_property',5,'p_internal_port_property','parser.py',179),
  ('link -> void GT void','link',3,'p_link_error','parser.py',185),
  ('link -> real_outport GT void','link',3,'p_link','parser.py',193),
  ('link -> void GT real_inport_list','link',3,'p_link','parser.py',194),
  ('link -> real_outport GT inport_list','link',3,'p_link','parser.py',195),
  ('link -> implicit_outport GT inport_list','link',3,'p_link','parser.py',196),
  ('link -> internal_outport GT inport_list','link',3,'p_link','parser.py',197),
  ('void -> VOIDPORT','void',1,'p_void','parser.py',202),
  ('inport_list -> inport_list COMMA inport','inport_list',3,'p_inport_list','parser.py',206),
  ('inport_list -> inport','inport_list',1,'p_inport_list','parser.py',207),
  ('real_inport_list -> inport_list COMMA real_inport','real_inport_list',3,'p_real_inport_list','parser.py',217),
  ('real_inport_list -> real_inport','real_inport_list',1,'p_real_inport_list','parser.py',218),
  ('inport -> real_or_internal_inport','inport',1,'p_inport','parser.py',227),
  ('inport -> transformed_inport','inport',1,'p_inport','parser.py',228),
  ('transformed_inport -> port_transform real_or_internal_inport','transformed_inport',2,'p_transformed_inport','parser.py',232),
  ('implicit_outport -> argument','implicit_outport',1,'p_implicit_outport','parser.py',237),
  ('implicit_outport -> label argument','implicit_outport',2,'p_implicit_outport','parser.py',238),
  ('real_or_internal_inport -> real_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',243),
  ('real_or_internal_inport -> internal_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',244),
  ('opt_tag -> AT tag_value','opt_tag',2,'p_opt_tag','parser.py',248),
  ('opt_tag -> empty','opt_tag',1,'p_opt_tag','parser.py',249),
  ('tag_value -> NUMBER','tag_value',1,'p_tag_value','parser.py',253),
  ('tag_value -> STRING','tag_value',1,'p_tag_value','parser.py',254),
  ('real_inport -> opt_tag qualified_port','real_inport',2,'p_real_inport','parser.py',259),
  ('real_outport -> qualified_port','real_outport',1,'p_real_outport','parser.py',264),
  ('internal_inport -> unqualified_port','internal_inport',1,'p_internal_inport','parser.py',270),
  ('internal_outport -> unqualified_port','internal_outport',1,'p_internal_outport','parser.py',276),
  ('port_transform -> SLASH argument SLASH','port_transform',3,'p_port_transform','parser.py',282),
  ('port_transform -> SLASH label argument SLASH','port_transform',4,'p_port_transform','parser.py',283),
  ('qualified_port -> IDENTIFIER DOT IDENTIFIER','qualified_port',3,'p_qualified_port','parser.py',287),
  ('unqualified_port -> DOT IDENTIFIER','unqualified_port',2,'p_unqualified_port','parser.py',291),
  ('label -> COLON identifier','label',2,'p_label','parser.py',296),
  ('named_args -> named_args named_arg COMMA','named_args',3,'p_named_args','parser.py',300),
  ('named_args -> named_args named_arg','named_args',2,'p_named_args','parser.py',301),
  ('named_args -> empty','named_args',1,'p_named_args','parser.py',302),
  ('named_arg -> identifier EQ argument','named_arg',3,'p_named_arg','parser.py',306),
  ('argument -> value','argument',1,'p_argument','parser.py',311),
  ('argument -> identifier','argument',1,'p_argument','parser.py',312),
  ('opt_argnames -> argnames','opt_argnames',1,'p_opt_argnames','parser.py',317),
  ('opt_argnames -> empty','opt_argnames',1,'p_opt_argnames','parser.py',318),
  ('argnames -> argnames COMMA IDENTIFIER','argnames',3,'p_argnames','parser.py',323),
  ('argnames -> IDENTIFIER','argnames',1,'p_argnames','parser.py',324),
  ('identifiers -> identifiers COMMA identifier','identifiers',3,'p_identifiers','parser.py',334),
  ('identifiers -> identifier','identifiers',1,'p_identifiers','parser.py',335),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',340),
  ('string -> STRING','string',1,'p_string','parser.py',346),
  ('string -> string STRING','string',2,'p_string','parser.py',347),
  ('value -> dictionary','value',1,'p_value','parser.py',351),
  ('value -> array','value',1,'p_value','parser.py',352),
  ('value -> bool','value',1,'p_value','parser.py',353),
  ('value -> null','value',1,'p_value','parser.py',354),
  ('value -> NUMBER','value',1,'p_value','parser.py',355),
  ('value -> string','value',1,'p_value','parser.py',356),
  ('bool -> TRUE','bool',1,'p_bool','parser.py',361),
  ('bool -> FALSE','bool',1,'p_bool','parser.py',362),
  ('null -> NULL','null',1,'p_null','parser.py',367),
  ('dictionary -> LBRACE members RBRACE','dictionary',3,'p_dictionary','parser.py',372),
  ('members -> members member COMMA','members',3,'p_members','parser.py',377),
  ('members -> members member','members',2,'p_members','parser.py',378),
  ('members -> empty','members',1,'p_members','parser.py',379),
  ('member -> string COLON value','member',3,'p_member','parser.py',383),
  ('values -> values value COMMA','values',3,'p_values','parser.py',388),
  ('values -> values value','values',2,'p_values','parser.py',389),
  ('values -> empty','values',1,'p_values','parser.py',390),
  ('array -> LBRACK values RBRACK','array',3,'p_array','parser.py',394),
  ('qualified_name -> qualified_name DOT IDENTIFIER','qualified_name',3,'p_qualified_name','parser.py',398),
  ('qualified_name -> IDENTIFIER','qualified_name',1,'p_qualified_name','parser.py',399),
  ('define_rule -> RULE identifier COLON rule','define_rule',4,'p_define_rule','parser.py',430),
  ('rule -> rule AND rule','rule',3,'p_combine_rule','parser.py',434),
  ('rule -> rule OR rule','rule',3,'p_combine_rule','parser.py',435),
  ('rule -> UNOT rule','rule',2,'p_negate_rule','parser.py',439),
  ('rule -> LPAREN rule RPAREN','rule',3,'p_subrule','parser.py',443),
  ('rule -> identifier','rule',1,'p_rule','parser.py',447),
  ('rule -> predicate','rule',1,'p_rule','parser.py',448),
  ('predicate -> identifier LPAREN named_args RPAREN','predicate',4,'p_predicate','parser.py',452),
  ('apply -> APPLY identifiers COLON rule','apply',4,'p_apply','parser.py',456),
  ('group -> GROUP identifier COLON identifiers','group',4,'p_group','parser.py',462),
]
