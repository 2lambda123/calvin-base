
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '41C60E8ED6D9BE94ED2210F1B4D5790E'
    
_lr_action_items = {'DOT':([0,1,3,5,6,7,9,10,11,13,14,16,18,22,23,27,29,30,31,34,38,39,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,64,66,67,70,73,74,76,80,86,87,88,89,91,92,93,95,96,99,102,103,105,106,107,109,112,113,115,120,124,125,131,132,136,137,138,140,142,144,147,150,152,154,159,165,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,41,-11,-8,-71,-72,-90,-85,-87,-83,-42,-29,-27,-88,-26,78,-80,-84,-30,-25,-28,-82,-89,-86,-24,41,81,-101,-10,-7,41,-81,41,41,41,-78,-65,-23,-52,-53,-48,-60,-37,-39,41,-44,-47,-40,-91,-41,-99,-46,-36,-38,81,-64,-100,-111,41,-49,-58,78,41,-108,-110,-107,-77,-102,-34,-43,-62,-45,-105,-63,-104,-103,-106,-31,-109,-2,-14,41,-13,41,-16,-20,-18,-19,-17,-15,-12,-35,]),'COMPONENT':([0,1,3,5,6,7,9,13,14,16,18,22,23,27,29,38,44,45,50,51,52,57,58,66,102,105,188,],[-2,-4,-3,12,-6,-79,-5,-11,12,-71,-72,-90,-85,-87,-83,-88,-80,-84,-82,-89,-86,-10,-7,-81,-91,-99,-12,]),'AND':([7,137,138,140,144,157,159,166,167,168,173,],[-79,-108,156,-107,156,156,-105,156,-103,-106,-109,]),'COLON':([0,1,3,5,6,7,9,10,11,13,14,16,18,22,23,27,29,30,31,34,38,39,43,44,45,47,48,49,50,51,52,53,54,57,58,60,66,74,75,76,79,80,86,87,88,89,91,92,95,96,97,99,100,102,103,105,106,107,109,113,120,125,131,137,138,140,142,144,147,150,154,159,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,26,-11,-8,-71,-72,-90,-85,-87,-83,-42,-29,-27,-88,-26,77,-80,-84,-30,-25,-28,-82,-89,-86,-24,26,-10,-7,83,-81,-78,110,-65,114,-23,-52,-53,-48,-60,-37,-39,-44,-47,26,-40,133,-91,-41,-99,-46,-36,-38,-64,-111,-49,-58,-108,-110,-107,-77,-102,-34,-43,-45,-105,-104,-103,-106,-31,-109,-2,-14,26,-13,26,-16,-20,-18,-19,-17,-15,-12,-35,]),'STRING':([0,1,3,5,6,7,9,10,11,13,14,15,16,17,18,22,23,27,29,30,31,33,34,36,38,39,44,45,47,48,49,50,51,52,53,54,57,58,65,66,68,69,71,72,74,76,80,86,87,88,89,91,92,94,95,96,97,99,100,101,102,103,104,105,106,107,109,113,120,125,129,131,133,134,135,137,138,140,142,144,147,150,153,154,159,163,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,44,-11,-8,44,-71,44,-72,-90,-85,66,-83,-42,-29,-2,-27,-2,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,44,-10,-7,-66,-81,-94,44,44,-98,-78,-65,-23,-52,-53,-48,-60,-37,-39,127,-44,-47,44,-40,66,-93,-91,-41,-97,-99,-46,-36,-38,-64,-111,-49,44,-58,44,-92,-96,-108,-110,-107,-77,-102,-34,-43,-95,-45,-105,44,-104,-103,-106,-31,-109,-2,-14,44,-13,44,-16,-20,-18,-19,-17,-15,-12,-35,]),'DEFINE':([0,3,6,7,9,16,18,22,23,27,29,38,44,45,50,51,52,58,66,102,105,],[2,2,-6,-79,-5,-71,-72,-90,-85,-87,-83,-88,-80,-84,-82,-89,-86,-7,-81,-91,-99,]),'VOIDPORT':([0,1,3,5,6,7,9,10,11,13,14,16,18,22,23,27,29,30,31,34,38,39,44,45,47,48,49,50,51,52,53,54,57,58,64,66,73,74,76,80,86,87,88,89,91,92,95,96,99,102,103,105,106,107,109,113,120,125,131,137,138,140,142,144,147,150,154,159,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,30,-11,-8,-71,-72,-90,-85,-87,-83,-42,-29,-27,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,30,-10,-7,30,-81,30,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,-40,-91,-41,-99,-46,-36,-38,-64,-111,-49,-58,-108,-110,-107,-77,-102,-34,-43,-45,-105,-104,-103,-106,-31,-109,-2,-14,30,-13,30,-16,-20,-18,-19,-17,-15,-12,-35,]),'COMMA':([7,16,18,22,23,27,29,38,44,45,50,51,52,66,74,75,76,86,87,88,89,92,95,96,99,101,102,103,104,105,106,108,113,118,119,120,125,131,142,149,150,153,154,162,172,],[-79,-71,-72,-90,-85,-87,-83,-88,-80,-84,-82,-89,-86,-81,-78,111,-65,-52,-53,-48,-60,124,-44,-47,124,134,-91,124,135,-99,-52,136,-64,-76,146,111,-49,-58,-77,164,-43,-95,-52,-75,-70,]),'$end':([0,1,3,4,5,6,7,9,10,11,13,14,16,18,22,23,27,28,29,30,31,34,38,39,42,44,45,47,48,49,50,51,52,53,54,57,58,66,74,76,80,86,87,88,89,91,92,95,96,99,102,103,105,106,107,109,113,120,125,131,137,138,140,142,144,147,150,154,159,166,167,168,170,173,188,],[-2,-4,-3,0,-2,-6,-79,-5,-9,-2,-11,-8,-71,-72,-90,-85,-87,-22,-83,-42,-29,-27,-88,-26,-1,-80,-84,-30,-25,-28,-82,-89,-86,-24,-21,-10,-7,-81,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,-40,-91,-41,-99,-46,-36,-38,-64,-111,-49,-58,-108,-110,-107,-77,-102,-34,-43,-45,-105,-104,-103,-106,-31,-109,-12,]),'GROUP':([0,1,3,5,6,7,9,10,11,13,14,16,18,22,23,27,29,30,31,34,38,39,44,45,47,48,49,50,51,52,53,54,57,58,66,74,76,80,86,87,88,89,91,92,95,96,99,102,103,105,106,107,109,113,120,125,131,137,138,140,142,144,147,150,154,159,166,167,168,170,173,188,],[-2,-4,-3,-2,-6,-79,-5,-9,19,-11,-8,-71,-72,-90,-85,-87,-83,-42,-29,-27,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,19,-10,-7,-81,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,-40,-91,-41,-99,-46,-36,-38,-64,-111,-49,-58,-108,-110,-107,-77,-102,-34,-43,-45,-105,-104,-103,-106,-31,-109,-12,]),'LBRACE':([0,1,3,5,6,7,9,10,11,13,14,15,16,17,18,22,23,27,29,30,31,34,36,38,39,44,45,47,48,49,50,51,52,53,54,57,58,65,66,71,72,74,76,80,86,87,88,89,91,92,95,96,97,99,102,103,104,105,106,107,109,113,117,118,119,120,125,129,131,133,135,137,138,140,142,144,147,150,154,159,162,163,166,167,168,170,171,173,174,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,33,-11,-8,33,-71,33,-72,-90,-85,-87,-83,-42,-29,-27,-2,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,33,-10,-7,-66,-81,33,-98,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,33,-40,-91,-41,-97,-99,-46,-36,-38,-64,-74,-76,-73,-111,-49,33,-58,33,-96,-108,-110,-107,-77,-102,-34,-43,-45,-105,-75,33,-104,-103,-106,-31,-2,-109,175,-2,-14,33,-13,33,-16,-20,-18,-19,-17,-15,-12,-35,]),'LBRACK':([0,1,3,5,6,7,9,10,11,13,14,15,16,17,18,20,22,23,27,29,30,31,34,36,38,39,44,45,47,48,49,50,51,52,53,54,57,58,65,66,71,72,74,76,80,86,87,88,89,91,92,95,96,97,99,102,103,104,105,106,107,109,113,120,125,129,131,133,135,137,138,140,142,144,147,150,154,159,163,166,167,168,170,173,175,176,177,178,179,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,36,-11,-8,36,-71,36,-72,63,-90,-85,-87,-83,-42,-29,-27,-2,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,36,-10,-7,-66,-81,36,-98,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,36,-40,-91,-41,-97,-99,-46,-36,-38,-64,-111,-49,36,-58,36,-96,-108,-110,-107,-77,-102,-34,-43,-45,-105,36,-104,-103,-106,-31,-109,-2,-14,36,-13,63,36,-16,-20,-18,-19,-17,-15,-12,-35,]),'TRUE':([0,1,3,5,6,7,9,10,11,13,14,15,16,17,18,22,23,27,29,30,31,34,36,38,39,44,45,47,48,49,50,51,52,53,54,57,58,65,66,71,72,74,76,80,86,87,88,89,91,92,95,96,97,99,102,103,104,105,106,107,109,113,120,125,129,131,133,135,137,138,140,142,144,147,150,154,159,163,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,38,-11,-8,38,-71,38,-72,-90,-85,-87,-83,-42,-29,-27,-2,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,38,-10,-7,-66,-81,38,-98,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,38,-40,-91,-41,-97,-99,-46,-36,-38,-64,-111,-49,38,-58,38,-96,-108,-110,-107,-77,-102,-34,-43,-45,-105,38,-104,-103,-106,-31,-109,-2,-14,38,-13,38,-16,-20,-18,-19,-17,-15,-12,-35,]),'RPAREN':([7,16,18,22,23,27,29,38,44,45,50,51,52,66,82,84,102,105,116,117,118,119,121,122,137,140,143,149,157,158,159,160,162,164,166,167,168,169,172,173,189,190,],[-79,-71,-72,-90,-85,-87,-83,-88,-80,-84,-82,-89,-86,-81,-2,-2,-91,-99,145,-74,-76,-73,147,-69,-108,-107,-2,-68,168,-2,-105,170,-75,-67,-104,-103,-106,173,-70,-109,-2,191,]),'APPLY':([0,1,3,5,6,7,9,10,11,13,14,16,18,22,23,27,29,30,31,34,38,39,44,45,47,48,49,50,51,52,53,54,57,58,66,74,76,80,86,87,88,89,91,92,95,96,99,102,103,105,106,107,109,113,120,125,131,137,138,140,142,144,147,150,154,159,166,167,168,170,173,188,],[-2,-4,-3,-2,-6,-79,-5,-9,40,-11,-8,-71,-72,-90,-85,-87,-83,-42,-29,-27,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,40,-10,-7,-81,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,-40,-91,-41,-99,-46,-36,-38,-64,-111,-49,-58,-108,-110,-107,-77,-102,-34,-43,-45,-105,-104,-103,-106,-31,-109,-12,]),'LPAREN':([7,20,55,56,61,62,76,110,112,113,114,115,123,139,140,141,155,156,179,186,],[-79,-2,82,-101,-33,84,-65,139,143,-64,139,-100,-32,139,158,139,139,139,-2,189,]),'EQ':([7,8,148,],[-79,15,163,]),'IDENTIFIER':([0,1,2,3,5,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,26,27,29,30,31,34,38,39,40,41,44,45,46,47,48,49,50,51,52,53,54,57,58,63,64,65,66,67,70,73,74,76,77,78,80,81,82,83,84,86,87,88,89,90,91,92,93,95,96,97,98,99,102,103,105,106,107,109,110,111,113,114,120,121,122,124,125,126,127,128,129,131,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,154,155,156,158,159,160,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,181,182,183,184,185,187,188,189,190,191,],[-2,-4,7,-3,-2,-6,-79,-5,-9,43,56,-11,-8,7,-71,7,-72,7,-90,-85,7,-87,-83,-42,-29,-27,-88,-26,7,76,-80,-84,7,-30,-25,-28,-82,-89,-86,-24,43,-10,-7,85,-2,-66,-81,-2,-2,-2,-78,-65,56,113,-23,115,118,7,-2,-52,-53,-48,-60,-55,-37,-39,-2,-44,-47,7,132,-40,-91,-41,-99,-46,-36,-38,7,7,-64,7,-111,7,-69,-2,-49,-54,-57,-56,7,-58,-2,-108,-110,7,-107,7,-77,-2,-102,118,162,-34,-68,-43,-62,-45,7,7,-2,-105,7,7,-67,-63,-104,-103,-106,7,-31,118,-70,-109,-2,-14,43,-13,43,-16,-20,-18,-19,-17,-15,-12,-2,7,-35,]),'RBRACE':([22,23,27,29,30,33,38,44,45,50,51,52,66,68,69,76,86,87,88,89,91,92,95,96,99,101,102,103,105,106,107,109,113,125,131,134,147,150,153,154,170,180,181,182,183,184,185,187,191,],[-90,-85,-87,-83,-42,-2,-88,-80,-84,-82,-89,-86,-81,-94,102,-65,-52,-53,-48,-60,-37,-39,-44,-47,-40,-93,-91,-41,-99,-46,-36,-38,-64,-49,-58,-92,-34,-43,-95,-45,-31,188,-16,-20,-18,-19,-17,-15,-35,]),'GT':([7,16,18,20,21,22,23,24,25,27,29,30,32,35,37,38,43,44,45,50,51,52,59,66,76,102,105,113,179,],[-79,-71,-72,-59,64,-90,-85,-50,-61,-87,-83,-42,67,70,73,-88,-79,-80,-84,-82,-89,-86,-51,-81,-65,-91,-99,-64,-61,]),'UNOT':([110,114,139,141,155,156,],[141,141,141,141,141,141,]),'NULL':([0,1,3,5,6,7,9,10,11,13,14,15,16,17,18,22,23,27,29,30,31,34,36,38,39,44,45,47,48,49,50,51,52,53,54,57,58,65,66,71,72,74,76,80,86,87,88,89,91,92,95,96,97,99,102,103,104,105,106,107,109,113,120,125,129,131,133,135,137,138,140,142,144,147,150,154,159,163,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,22,-11,-8,22,-71,22,-72,-90,-85,-87,-83,-42,-29,-27,-2,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,22,-10,-7,-66,-81,22,-98,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,22,-40,-91,-41,-97,-99,-46,-36,-38,-64,-111,-49,22,-58,22,-96,-108,-110,-107,-77,-102,-34,-43,-45,-105,22,-104,-103,-106,-31,-109,-2,-14,22,-13,22,-16,-20,-18,-19,-17,-15,-12,-35,]),'DOCSTRING':([175,],[178,]),'OR':([7,137,138,140,144,157,159,166,167,168,173,],[-79,-108,155,-107,155,155,-105,-104,-103,-106,-109,]),'RULE':([0,1,3,5,6,7,9,10,11,13,14,16,18,22,23,27,29,30,31,34,38,39,44,45,47,48,49,50,51,52,53,54,57,58,66,74,76,80,86,87,88,89,91,92,95,96,99,102,103,105,106,107,109,113,120,125,131,137,138,140,142,144,147,150,154,159,166,167,168,170,173,188,],[-2,-4,-3,-2,-6,-79,-5,-9,46,-11,-8,-71,-72,-90,-85,-87,-83,-42,-29,-27,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,46,-10,-7,-81,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,-40,-91,-41,-99,-46,-36,-38,-64,-111,-49,-58,-108,-110,-107,-77,-102,-34,-43,-45,-105,-104,-103,-106,-31,-109,-12,]),'RBRACK':([22,23,27,29,36,38,44,45,50,51,52,66,71,72,85,102,104,105,135,],[-90,-85,-87,-83,-2,-88,-80,-84,-82,-89,-86,-81,105,-98,123,-91,-97,-99,-96,]),'AT':([64,67,70,73,93,124,136,152,165,],[94,94,94,94,94,94,94,-62,-63,]),'SLASH':([7,16,18,22,23,27,29,38,44,45,50,51,52,64,66,67,70,73,102,105,124,130,136,151,],[-79,-71,-72,-90,-85,-87,-83,-88,-80,-84,-82,-89,-86,97,-81,97,97,97,-91,-99,97,152,97,165,]),'RARROW':([117,118,119,145,161,162,],[-74,-76,-73,-2,171,-75,]),'FALSE':([0,1,3,5,6,7,9,10,11,13,14,15,16,17,18,22,23,27,29,30,31,34,36,38,39,44,45,47,48,49,50,51,52,53,54,57,58,65,66,71,72,74,76,80,86,87,88,89,91,92,95,96,97,99,102,103,104,105,106,107,109,113,120,125,129,131,133,135,137,138,140,142,144,147,150,154,159,163,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,51,-11,-8,51,-71,51,-72,-90,-85,-87,-83,-42,-29,-27,-2,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,51,-10,-7,-66,-81,51,-98,-78,-65,-23,-52,-53,-48,-60,-37,-39,-44,-47,51,-40,-91,-41,-97,-99,-46,-36,-38,-64,-111,-49,51,-58,51,-96,-108,-110,-107,-77,-102,-34,-43,-45,-105,51,-104,-103,-106,-31,-109,-2,-14,51,-13,51,-16,-20,-18,-19,-17,-15,-12,-35,]),'NUMBER':([0,1,3,5,6,7,9,10,11,13,14,15,16,17,18,22,23,27,29,30,31,34,36,38,39,44,45,47,48,49,50,51,52,53,54,57,58,65,66,71,72,74,76,80,86,87,88,89,91,92,94,95,96,97,99,102,103,104,105,106,107,109,113,120,125,129,131,133,135,137,138,140,142,144,147,150,154,159,163,166,167,168,170,173,175,176,177,178,180,181,182,183,184,185,187,188,191,],[-2,-4,-3,-2,-6,-79,-5,-9,52,-11,-8,52,-71,52,-72,-90,-85,-87,-83,-42,-29,-27,-2,-88,-26,-80,-84,-30,-25,-28,-82,-89,-86,-24,52,-10,-7,-66,-81,52,-98,-78,-65,-23,-52,-53,-48,-60,-37,-39,128,-44,-47,52,-40,-91,-41,-97,-99,-46,-36,-38,-64,-111,-49,52,-58,52,-96,-108,-110,-107,-77,-102,-34,-43,-45,-105,52,-104,-103,-106,-31,-109,-2,-14,52,-13,52,-16,-20,-18,-19,-17,-15,-12,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'label':([11,54,97,177,180,],[17,17,129,17,17,]),'constdefs':([0,],[3,]),'real_inport':([64,67,70,73,93,124,136,],[86,86,86,106,86,86,154,]),'internal_inport':([64,67,70,73,93,124,136,],[87,87,87,87,87,87,87,]),'identifier':([2,11,15,17,19,26,40,46,54,83,97,110,111,114,121,129,139,141,155,156,160,163,169,177,180,190,],[8,18,18,18,60,65,74,79,18,74,18,140,142,140,148,18,140,140,140,140,148,18,148,18,18,148,]),'qualified_port':([11,54,98,177,180,],[20,20,131,20,20,]),'real_inport_list':([73,],[109,]),'members':([33,],[69,]),'real_outport':([11,54,177,180,],[21,21,21,21,]),'named_arg':([121,160,169,190,],[149,149,149,149,]),'null':([11,15,17,54,71,97,129,133,163,177,180,],[23,23,23,23,23,23,23,23,23,23,23,]),'transformed_inport':([64,67,70,73,124,136,],[88,88,88,88,88,88,]),'argument':([11,15,17,54,97,129,163,177,180,],[24,58,59,24,130,151,172,24,24,]),'unqualified_port':([11,54,64,67,70,73,93,124,136,177,180,],[25,25,89,89,89,89,89,89,89,179,179,]),'values':([36,],[71,]),'string':([11,15,17,54,69,71,97,129,133,163,177,180,],[27,27,27,27,100,27,27,27,27,27,27,27,]),'empty':([0,5,11,20,33,36,64,67,70,73,82,84,93,124,136,143,145,158,171,175,179,189,],[1,10,28,61,68,72,90,90,90,90,117,122,90,90,90,122,117,122,117,176,61,122,]),'port_property':([11,54,177,180,],[39,39,183,183,]),'array':([11,15,17,54,71,97,129,133,163,177,180,],[29,29,29,29,29,29,29,29,29,29,29,]),'script':([0,],[4,]),'implicit_outport':([11,54,177,180,],[32,32,32,32,]),'group':([11,54,],[31,31,]),'compdef':([5,14,],[13,57,]),'link':([11,54,177,180,],[34,34,182,182,]),'internal_outport':([11,54,177,180,],[35,35,35,35,]),'docstring':([175,],[177,]),'compdefs':([5,],[14,]),'void':([11,54,64,73,177,180,],[37,37,91,107,37,37,]),'inport_list':([64,67,70,73,],[92,99,103,108,]),'value':([11,15,17,54,71,97,129,133,163,177,180,],[16,16,16,16,104,16,16,153,16,16,16,]),'opt_argnames':([82,145,171,],[116,161,174,]),'named_args':([84,143,158,189,],[121,160,169,190,]),'port_transform':([64,67,70,73,124,136,],[93,93,93,93,93,93,]),'member':([69,],[101,]),'opt_program':([11,],[42,]),'comp_statement':([177,180,],[181,187,]),'comp_statements':([177,],[180,]),'opt_constdefs':([0,],[5,]),'tag_value':([94,],[126,]),'rule':([110,114,139,141,155,156,],[138,144,157,159,166,167,]),'qualified_name':([12,77,],[55,112,]),'predicate':([110,114,139,141,155,156,],[137,137,137,137,137,137,]),'inport':([64,67,70,73,124,136,],[95,95,95,95,150,150,]),'bool':([11,15,17,54,71,97,129,133,163,177,180,],[45,45,45,45,45,45,45,45,45,45,45,]),'internal_port_property':([177,180,],[184,184,]),'real_or_internal_inport':([64,67,70,73,93,124,136,],[96,96,96,96,125,96,96,]),'apply':([11,54,],[47,47,]),'opt_compdefs':([5,],[11,]),'dictionary':([11,15,17,54,71,97,129,133,163,177,180,],[50,50,50,50,50,50,50,50,50,50,50,]),'assignment':([11,54,177,180,],[48,48,185,185,]),'argnames':([82,145,171,],[119,119,119,]),'opt_direction':([20,179,],[62,186,]),'define_rule':([11,54,],[49,49,]),'constdef':([0,3,],[6,9,]),'opt_tag':([64,67,70,73,93,124,136,],[98,98,98,98,98,98,98,]),'statement':([11,54,],[53,80,]),'program':([11,],[54,]),'identifiers':([40,83,],[75,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> opt_constdefs opt_compdefs opt_program','script',3,'p_script','parser.py',51),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',57),
  ('opt_constdefs -> constdefs','opt_constdefs',1,'p_opt_constdefs','parser.py',61),
  ('opt_constdefs -> empty','opt_constdefs',1,'p_opt_constdefs','parser.py',62),
  ('constdefs -> constdefs constdef','constdefs',2,'p_constdefs','parser.py',67),
  ('constdefs -> constdef','constdefs',1,'p_constdefs','parser.py',68),
  ('constdef -> DEFINE identifier EQ argument','constdef',4,'p_constdef','parser.py',76),
  ('opt_compdefs -> compdefs','opt_compdefs',1,'p_opt_compdefs','parser.py',82),
  ('opt_compdefs -> empty','opt_compdefs',1,'p_opt_compdefs','parser.py',83),
  ('compdefs -> compdefs compdef','compdefs',2,'p_compdefs','parser.py',87),
  ('compdefs -> compdef','compdefs',1,'p_compdefs','parser.py',88),
  ('compdef -> COMPONENT qualified_name LPAREN opt_argnames RPAREN opt_argnames RARROW opt_argnames LBRACE docstring comp_statements RBRACE','compdef',12,'p_compdef','parser.py',96),
  ('docstring -> DOCSTRING','docstring',1,'p_docstring','parser.py',101),
  ('docstring -> empty','docstring',1,'p_docstring','parser.py',102),
  ('comp_statements -> comp_statements comp_statement','comp_statements',2,'p_comp_statements','parser.py',106),
  ('comp_statements -> comp_statement','comp_statements',1,'p_comp_statements','parser.py',107),
  ('comp_statement -> assignment','comp_statement',1,'p_comp_statement','parser.py',114),
  ('comp_statement -> port_property','comp_statement',1,'p_comp_statement','parser.py',115),
  ('comp_statement -> internal_port_property','comp_statement',1,'p_comp_statement','parser.py',116),
  ('comp_statement -> link','comp_statement',1,'p_comp_statement','parser.py',117),
  ('opt_program -> program','opt_program',1,'p_opt_program','parser.py',121),
  ('opt_program -> empty','opt_program',1,'p_opt_program','parser.py',122),
  ('program -> program statement','program',2,'p_program','parser.py',126),
  ('program -> statement','program',1,'p_program','parser.py',127),
  ('statement -> assignment','statement',1,'p_statement','parser.py',134),
  ('statement -> port_property','statement',1,'p_statement','parser.py',135),
  ('statement -> link','statement',1,'p_statement','parser.py',136),
  ('statement -> define_rule','statement',1,'p_statement','parser.py',137),
  ('statement -> group','statement',1,'p_statement','parser.py',138),
  ('statement -> apply','statement',1,'p_statement','parser.py',139),
  ('assignment -> IDENTIFIER COLON qualified_name LPAREN named_args RPAREN','assignment',6,'p_assignment','parser.py',144),
  ('opt_direction -> LBRACK IDENTIFIER RBRACK','opt_direction',3,'p_opt_direction','parser.py',149),
  ('opt_direction -> empty','opt_direction',1,'p_opt_direction','parser.py',150),
  ('port_property -> qualified_port opt_direction LPAREN named_args RPAREN','port_property',5,'p_port_property','parser.py',164),
  ('internal_port_property -> unqualified_port opt_direction LPAREN named_args RPAREN','internal_port_property',5,'p_internal_port_property','parser.py',170),
  ('link -> void GT void','link',3,'p_link_error','parser.py',176),
  ('link -> real_outport GT void','link',3,'p_link','parser.py',184),
  ('link -> void GT real_inport_list','link',3,'p_link','parser.py',185),
  ('link -> real_outport GT inport_list','link',3,'p_link','parser.py',186),
  ('link -> implicit_outport GT inport_list','link',3,'p_link','parser.py',187),
  ('link -> internal_outport GT inport_list','link',3,'p_link','parser.py',188),
  ('void -> VOIDPORT','void',1,'p_void','parser.py',193),
  ('inport_list -> inport_list COMMA inport','inport_list',3,'p_inport_list','parser.py',197),
  ('inport_list -> inport','inport_list',1,'p_inport_list','parser.py',198),
  ('real_inport_list -> inport_list COMMA real_inport','real_inport_list',3,'p_real_inport_list','parser.py',208),
  ('real_inport_list -> real_inport','real_inport_list',1,'p_real_inport_list','parser.py',209),
  ('inport -> real_or_internal_inport','inport',1,'p_inport','parser.py',218),
  ('inport -> transformed_inport','inport',1,'p_inport','parser.py',219),
  ('transformed_inport -> port_transform real_or_internal_inport','transformed_inport',2,'p_transformed_inport','parser.py',223),
  ('implicit_outport -> argument','implicit_outport',1,'p_implicit_outport','parser.py',228),
  ('implicit_outport -> label argument','implicit_outport',2,'p_implicit_outport','parser.py',229),
  ('real_or_internal_inport -> real_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',234),
  ('real_or_internal_inport -> internal_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',235),
  ('opt_tag -> AT tag_value','opt_tag',2,'p_opt_tag','parser.py',239),
  ('opt_tag -> empty','opt_tag',1,'p_opt_tag','parser.py',240),
  ('tag_value -> NUMBER','tag_value',1,'p_tag_value','parser.py',244),
  ('tag_value -> STRING','tag_value',1,'p_tag_value','parser.py',245),
  ('real_inport -> opt_tag qualified_port','real_inport',2,'p_real_inport','parser.py',250),
  ('real_outport -> qualified_port','real_outport',1,'p_real_outport','parser.py',255),
  ('internal_inport -> unqualified_port','internal_inport',1,'p_internal_inport','parser.py',261),
  ('internal_outport -> unqualified_port','internal_outport',1,'p_internal_outport','parser.py',267),
  ('port_transform -> SLASH argument SLASH','port_transform',3,'p_port_transform','parser.py',273),
  ('port_transform -> SLASH label argument SLASH','port_transform',4,'p_port_transform','parser.py',274),
  ('qualified_port -> IDENTIFIER DOT IDENTIFIER','qualified_port',3,'p_qualified_port','parser.py',278),
  ('unqualified_port -> DOT IDENTIFIER','unqualified_port',2,'p_unqualified_port','parser.py',282),
  ('label -> COLON identifier','label',2,'p_label','parser.py',287),
  ('named_args -> named_args named_arg COMMA','named_args',3,'p_named_args','parser.py',291),
  ('named_args -> named_args named_arg','named_args',2,'p_named_args','parser.py',292),
  ('named_args -> empty','named_args',1,'p_named_args','parser.py',293),
  ('named_arg -> identifier EQ argument','named_arg',3,'p_named_arg','parser.py',297),
  ('argument -> value','argument',1,'p_argument','parser.py',302),
  ('argument -> identifier','argument',1,'p_argument','parser.py',303),
  ('opt_argnames -> argnames','opt_argnames',1,'p_opt_argnames','parser.py',308),
  ('opt_argnames -> empty','opt_argnames',1,'p_opt_argnames','parser.py',309),
  ('argnames -> argnames COMMA IDENTIFIER','argnames',3,'p_argnames','parser.py',314),
  ('argnames -> IDENTIFIER','argnames',1,'p_argnames','parser.py',315),
  ('identifiers -> identifiers COMMA identifier','identifiers',3,'p_identifiers','parser.py',325),
  ('identifiers -> identifier','identifiers',1,'p_identifiers','parser.py',326),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',331),
  ('string -> STRING','string',1,'p_string','parser.py',337),
  ('string -> string STRING','string',2,'p_string','parser.py',338),
  ('value -> dictionary','value',1,'p_value','parser.py',342),
  ('value -> array','value',1,'p_value','parser.py',343),
  ('value -> bool','value',1,'p_value','parser.py',344),
  ('value -> null','value',1,'p_value','parser.py',345),
  ('value -> NUMBER','value',1,'p_value','parser.py',346),
  ('value -> string','value',1,'p_value','parser.py',347),
  ('bool -> TRUE','bool',1,'p_bool','parser.py',352),
  ('bool -> FALSE','bool',1,'p_bool','parser.py',353),
  ('null -> NULL','null',1,'p_null','parser.py',358),
  ('dictionary -> LBRACE members RBRACE','dictionary',3,'p_dictionary','parser.py',363),
  ('members -> members member COMMA','members',3,'p_members','parser.py',368),
  ('members -> members member','members',2,'p_members','parser.py',369),
  ('members -> empty','members',1,'p_members','parser.py',370),
  ('member -> string COLON value','member',3,'p_member','parser.py',374),
  ('values -> values value COMMA','values',3,'p_values','parser.py',379),
  ('values -> values value','values',2,'p_values','parser.py',380),
  ('values -> empty','values',1,'p_values','parser.py',381),
  ('array -> LBRACK values RBRACK','array',3,'p_array','parser.py',385),
  ('qualified_name -> qualified_name DOT IDENTIFIER','qualified_name',3,'p_qualified_name','parser.py',389),
  ('qualified_name -> IDENTIFIER','qualified_name',1,'p_qualified_name','parser.py',390),
  ('define_rule -> RULE identifier COLON rule','define_rule',4,'p_define_rule','parser.py',421),
  ('rule -> rule AND rule','rule',3,'p_combine_rule','parser.py',425),
  ('rule -> rule OR rule','rule',3,'p_combine_rule','parser.py',426),
  ('rule -> UNOT rule','rule',2,'p_negate_rule','parser.py',430),
  ('rule -> LPAREN rule RPAREN','rule',3,'p_subrule','parser.py',434),
  ('rule -> identifier','rule',1,'p_rule','parser.py',438),
  ('rule -> predicate','rule',1,'p_rule','parser.py',439),
  ('predicate -> identifier LPAREN named_args RPAREN','predicate',4,'p_predicate','parser.py',443),
  ('apply -> APPLY identifiers COLON rule','apply',4,'p_apply','parser.py',447),
  ('group -> GROUP identifier COLON identifiers','group',4,'p_group','parser.py',453),
]
