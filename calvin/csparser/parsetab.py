
# /Users/eolaang/Code/Runaways/github/calvin/csparser/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '5DA35B7531069A61BA420919A13B38D5'
    
_lr_action_items = {'COMPONENT':([0,2,4,8,58,],[1,-5,1,-4,-6,]),'GT':([10,16,30,],[19,23,-21,]),'RPAREN':([18,25,26,27,36,38,40,41,42,48,49,50,51,52,],[-30,34,-33,-31,-22,-32,-25,-23,46,-26,-29,-27,-28,-24,]),'STRING':([44,],[50,]),'COMMA':([26,27,38,40,41,48,49,50,51,52,],[-33,35,-32,-25,45,-26,-29,-27,-28,-24,]),'DOT':([6,7,10,24,29,31,32,],[17,-35,20,-34,20,17,20,]),'LPAREN':([6,7,24,31,],[18,-35,-34,36,]),'IDENTIFIER':([0,1,2,4,5,8,9,11,13,15,17,18,19,20,21,22,23,28,30,32,33,34,35,36,43,44,45,46,53,54,55,56,58,],[-2,7,-5,-3,10,-4,-14,10,-15,-16,24,26,29,30,7,-13,32,-19,-21,-20,-18,26,38,39,26,49,39,-17,-7,10,-8,-9,-6,]),'NUMBER':([44,],[51,]),'LBRACE':([26,27,38,43,47,],[-33,-31,-32,-30,53,]),'EQ':([39,],[44,]),'RBRACE':([9,11,13,15,22,28,30,32,33,46,57,],[-14,-12,-15,-16,-13,-19,-21,-20,-18,-17,58,]),'COLON':([10,],[21,]),'RARROW':([26,27,34,37,38,],[-33,-31,-30,43,-32,]),'DOCSTRING':([53,],[56,]),'$end':([0,2,3,4,5,8,9,11,12,13,14,15,22,28,30,32,33,46,58,],[-2,-5,0,-3,-10,-4,-14,-12,-1,-15,-11,-16,-13,-19,-21,-20,-18,-17,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([5,11,54,],[9,22,9,]),'argument':([44,],[48,]),'named_argument':([36,45,],[40,52,]),'statement_list':([5,54,],[11,11,]),'program':([5,54,],[14,57,]),'qualified_name':([1,21,],[6,31,]),'compdef':([0,4,],[2,8,]),'named_argument_list':([36,],[41,]),'opt_program':([5,],[12,]),'opt_docstring':([53,],[54,]),'opt_id_list':([18,34,43,],[25,37,47,]),'id_list':([18,34,43,],[27,27,27,]),'assignment':([5,11,54,],[13,13,13,]),'script':([0,],[3,]),'compdef_list':([0,],[4,]),'docstring':([53,],[55,]),'qualified_port':([5,11,19,23,54,],[16,16,28,33,16,]),'link':([5,11,54,],[15,15,15,]),'opt_named_argument_list':([36,],[42,]),'opt_compdef_list':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> opt_compdef_list opt_program','script',2,'p_script','parser.py',33),
  ('opt_compdef_list -> <empty>','opt_compdef_list',0,'p_opt_compdef_list','parser.py',38),
  ('opt_compdef_list -> compdef_list','opt_compdef_list',1,'p_opt_compdef_list','parser.py',39),
  ('compdef_list -> compdef_list compdef','compdef_list',2,'p_compdef_list','parser.py',47),
  ('compdef_list -> compdef','compdef_list',1,'p_compdef_list','parser.py',48),
  ('compdef -> COMPONENT qualified_name LPAREN opt_id_list RPAREN opt_id_list RARROW opt_id_list LBRACE opt_docstring program RBRACE','compdef',12,'p_compdef','parser.py',57),
  ('opt_docstring -> <empty>','opt_docstring',0,'p_opt_docstring','parser.py',76),
  ('opt_docstring -> docstring','opt_docstring',1,'p_opt_docstring','parser.py',77),
  ('docstring -> DOCSTRING','docstring',1,'p_docstring','parser.py',85),
  ('opt_program -> <empty>','opt_program',0,'p_opt_program','parser.py',90),
  ('opt_program -> program','opt_program',1,'p_opt_program','parser.py',91),
  ('program -> statement_list','program',1,'p_program','parser.py',99),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',106),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',107),
  ('statement -> assignment','statement',1,'p_statement','parser.py',127),
  ('statement -> link','statement',1,'p_statement','parser.py',128),
  ('assignment -> IDENTIFIER COLON qualified_name LPAREN opt_named_argument_list RPAREN','assignment',6,'p_assignment','parser.py',133),
  ('link -> qualified_port GT qualified_port','link',3,'p_link','parser.py',138),
  ('link -> IDENTIFIER GT qualified_port','link',3,'p_link','parser.py',139),
  ('link -> qualified_port GT IDENTIFIER','link',3,'p_link','parser.py',140),
  ('qualified_port -> IDENTIFIER DOT IDENTIFIER','qualified_port',3,'p_qualified_port','parser.py',153),
  ('opt_named_argument_list -> <empty>','opt_named_argument_list',0,'p_opt_named_argument_list','parser.py',158),
  ('opt_named_argument_list -> named_argument_list','opt_named_argument_list',1,'p_opt_named_argument_list','parser.py',159),
  ('named_argument_list -> named_argument_list COMMA named_argument','named_argument_list',3,'p_named_argument_list','parser.py',167),
  ('named_argument_list -> named_argument','named_argument_list',1,'p_named_argument_list','parser.py',168),
  ('named_argument -> IDENTIFIER EQ argument','named_argument',3,'p_named_argument','parser.py',179),
  ('argument -> STRING','argument',1,'p_argument','parser.py',184),
  ('argument -> NUMBER','argument',1,'p_argument','parser.py',185),
  ('argument -> IDENTIFIER','argument',1,'p_argument','parser.py',186),
  ('opt_id_list -> <empty>','opt_id_list',0,'p_opt_id_list','parser.py',191),
  ('opt_id_list -> id_list','opt_id_list',1,'p_opt_id_list','parser.py',192),
  ('id_list -> id_list COMMA IDENTIFIER','id_list',3,'p_id_list','parser.py',200),
  ('id_list -> IDENTIFIER','id_list',1,'p_id_list','parser.py',201),
  ('qualified_name -> qualified_name DOT IDENTIFIER','qualified_name',3,'p_qualified_name','parser.py',210),
  ('qualified_name -> IDENTIFIER','qualified_name',1,'p_qualified_name','parser.py',211),
]
