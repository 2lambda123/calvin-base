dem: std.Demux(mapping={"one":"out1.out", "two":"out2.out", "three":"out3.out"})
input: std.CountTimer(sleep=0.5)
sel: std.AlternateN(order=["c1.token", "c2.token", "c3.token"])

out1 : text.PrefixString(prefix="tag-1:")
out2 : text.PrefixString(prefix="tag-2:")
out3 : text.PrefixString(prefix="tag-3:")

c1 : std.Constant(data="one", n=-1)
c2 : std.Constant(data="two", n=-1)
c3 : std.Constant(data="three", n=-1)

print : io.Print()

input.integer > out1.in
input.integer > out2.in
input.integer > out3.in

out1.out > dem.token
out2.out > dem.token
out3.out > dem.token


c1.token > sel.token
c2.token > sel.token
c3.token > sel.token

sel.token > dem.select

dem.token > print.token
