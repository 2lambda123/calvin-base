dem: flow.Demux(select={"one":&out1.in, "two": &out2.in, "three": &out3.in})
input: std.CountTimer(sleep=0.5)
sel: flow.Alternate(order=[&c1.token, &c2.token, &c3.token])

out1 : text.PrefixString(prefix="tag-1:")
out2 : text.PrefixString(prefix="tag-2:")
out3 : text.PrefixString(prefix="tag-3:")

print : io.Print()
coll : flow.Collect()

input.integer > dem.token

dem.token > out1.in
dem.token > out2.in
dem.token > out3.in


:c1 "one" > sel.token
:c2 "two" > sel.token
:c3 "three" > sel.token

sel.token > dem.select
dem.default > voidport

out1.out > coll.token
out2.out > coll.token
out3.out > coll.token

coll.token > print.token