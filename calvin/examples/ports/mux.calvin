mux: std.Mux(mapping={"one": &out1.out, "two":&out2.out, "three":&out3.out})
input: std.CountTimer(sleep=0.5)
sel: std.Alternate(order=[&c1.token, &c2.token, &c3.token])

out1 : text.PrefixString(prefix="tag-1:")
out2 : text.PrefixString(prefix="tag-2:")
out3 : text.PrefixString(prefix="tag-3:")

print : io.Print()

input.integer > out1.in
input.integer > out2.in
input.integer > out3.in

out1.out > mux.token
out2.out > mux.token
out3.out > mux.token


:c1 "one" > sel.token
:c2 "two" > sel.token
:c3 "three" > sel.token

sel.token > mux.select

mux.token > print.token
